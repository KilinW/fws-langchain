name: CI/CD Workflow

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      GCP_PROJECT_ID: objectdetection-363706
      GAR_REPOSITORY: scon
      GAR_REGION: asia-east1
      SERVICE_ACCOUNT_NAME: scon-mng@objectdetection-363706.iam.gserviceaccount.com

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python -m pytest
    
    - name: Google Cloud Auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GAR_JSON_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Log in to Google Artifacts Registry
      env:
        GAR_JSON_KEY: ${{ secrets.GAR_JSON_KEY }}
      run: echo "$GAR_JSON_KEY" | docker login -u _json_key --password-stdin https://${{ env.GAR_REGION }}-docker.pkg.dev

    - name: GCloud Credentials Helper
      env:
        GAR_JSON_KEY: ${{ secrets.GAR_JSON_KEY }}
      run: |
        echo "$GAR_JSON_KEY" > gcp-key.json
        gcloud auth activate-service-account ${{ env.SERVICE_ACCOUNT_NAME }} --key-file=gcp-key.json
        rm gcp-key.json

    - name: Google Auth Configure-Docker
      run: |
        gcloud auth configure-docker

    - name: Build Docker image
      run: docker build -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/lc-app:${{ github.sha }} .

    - name: Push Docker image to GAR
      run: docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/lc-app:${{ github.sha }}

